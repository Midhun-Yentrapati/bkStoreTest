# Application Configuration
spring.application.name=user-authentication-service
server.port=8081

# Database Configuration - MySQL 
spring.datasource.url=jdbc:mysql://localhost:3306/bookstore_auth_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Database Configuration - H2 (Development) - Uncomment for development
# spring.datasource.url=jdbc:h2:mem:auth_db
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# JWT Configuration
jwt.secret=mySecretKey123456789012345678901234567890SecureJWTKeyForBookStoreAuth2024!
jwt.expiration=86400000
jwt.refresh-expiration=604800000
jwt.access-token-expiration=86400000
jwt.refresh-token-expiration=604800000

# Security Configuration
spring.security.user.name=admin
spring.security.user.password=admin123
spring.security.user.roles=ADMIN

# Auto-create Super Admin on startup
app.admin.auto-create=true
app.admin.username=IronMan
app.admin.email=ironman@bookstore.com
app.admin.password=I@amIronMan25
app.admin.full-name=Tony Stark
app.admin.employee-id=EMP-IRONMAN-001
app.admin.department=IT Administration

# Eureka Configuration - ENABLED for microservices architecture
eureka.client.enabled=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=localhost
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=30

# Swagger/OpenAPI Configuration
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.persistAuthorization=true

# Logging Configuration
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=DEBUG
logging.level.com.bookstore=DEBUG
logging.level.com.bookstore.user_authentication_service.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# CORS Configuration
cors.allowed-origins=http://localhost:4200,http://localhost:3000
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# Session Configuration
spring.session.store-type=none
server.servlet.session.timeout=30m

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
