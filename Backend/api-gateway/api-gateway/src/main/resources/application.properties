# API Gateway Configuration
spring.application.name=api-gateway
server.port=8090

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=localhost

# Gateway Routes Configuration - Correct Spring Cloud Gateway Format
# User Authentication Service Routes
spring.cloud.gateway.routes[0].id=user-authentication-service
spring.cloud.gateway.routes[0].uri=lb://user-authentication-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**,/api/users/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=0
spring.cloud.gateway.routes[0].filters[1]=PreserveHostHeader

# Admin BackOffice Service Routes
spring.cloud.gateway.routes[1].id=admin-backoffice-service
spring.cloud.gateway.routes[1].uri=lb://admin-backoffice-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/admin/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=0

# Book Catalog Service Routes
spring.cloud.gateway.routes[2].id=book-catalog-service
spring.cloud.gateway.routes[2].uri=lb://BOOK-CATALOG
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/books/**,/api/categories/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=0

# Test and Health Routes (for all services)
spring.cloud.gateway.routes[3].id=test-routes
spring.cloud.gateway.routes[3].uri=lb://user-authentication-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/test/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=0

# CORS Configuration - Updated Spring Boot 3.x Format with PATCH support
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:4200,http://localhost:3000
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allow-credentials=true
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].max-age=3600
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].exposed-headers=*

# Gateway Discovery Locator - Updated Format
spring.cloud.gateway.server.webflux.discovery.locator.enabled=true
spring.cloud.gateway.server.webflux.discovery.locator.lower-case-service-id=true

# JWT Token Forwarding Configuration
# Gateway will automatically forward all headers including Authorization
# Additional logging configured in GatewayConfig.java

# Management and Health Check Configuration
management.endpoints.web.exposure.include=health,info,metrics,gateway
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/actuator

# Logging Configuration - Optimized levels
logging.level.org.springframework.cloud.gateway=INFO
logging.level.org.springframework.web.cors=INFO
logging.level.reactor.netty=WARN
logging.level.root=INFO
